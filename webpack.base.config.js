import path from 'path'
import HtmlWebpackPlugin from 'html-webpack-plugin'

export default (env, argv) => {
  const config = {
    entry: './src/index.tsx',
    output: {
      // 因为开发环境中，chunkhash与HotModuleReplacementPlugin有冲突，所以两个环境分别设置
      filename: argv.mode === 'production' ? '[name].[chunkhash:8].js' : '[name].[hash:8].js',
      publicPath: '/'
    },
    resolve: {
      extensions: ['.tsx', '.ts', '.jsx', '.js'],
      modules: [path.resolve(__dirname, 'src'), 'node_modules']
    },
    module: {
      rules: [
        {
          test: /\.(t|j)sx?$/,
          use: {
            loader: 'babel-loader'
          },
          exclude: /node_modules/
        },
        {
          test: /\.css$/,
          use: ['style-loader', 'css-loader'],
          include: /node_modules/
        },
        {
          test: /\.module\.css$/,
          use: [
            'style-loader',
            // 为css文件自动生成typings，这样当通过import引入css文件时TS才能找到
            // {
            //   loader: '@teamsupercell/typings-for-css-modules-loader',
            //   options: {
            //     banner: '// autogenerated by typings-for-css-modules-loader. \n// Please do not change this file!'
            //   }
            // },
            {
              loader: 'css-loader',
              options: {
                import: true,
                modules: {
                  localIdentName: '[path][name]__[local]--[hash:base64:5]'
                },
                importLoaders: 1
              }
            },
            'postcss-loader'
          ],
          include: /src/
        },
        {
          test: /\.(png|jpg|gif|eot|ttf|woff|woff2|svg)$/,
          use: [
            {
              loader: 'url-loader',
            }
          ]
        }
      ]
    },
    plugins: [
      new HtmlWebpackPlugin({
        template: path.resolve(__dirname, 'src/index.html'),
        favicon: path.resolve(__dirname, 'favicon.ico')
      })
    ]
  }
  return config
}
